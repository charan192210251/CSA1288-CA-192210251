#include <stdio.h>
#include <unistd.h> // For sleep function to simulate clock cycles

void fetch() {
    printf("Fetch Stage: Retrieving the instruction from memory.\n");
    sleep(1); // Simulate the time taken for the fetch stage
}

void decode() {
    printf("Decode Stage: Decoding the instruction.\n");
    sleep(1); // Simulate the time taken for the decode stage
}

void execute(int a, int b) {
    printf("Execute Stage: Performing the addition of %d and %d.\n", a, b);
    int result = a + b;
    printf("Result of addition: %d\n", result);
    sleep(1); // Simulate the time taken for the execute stage
}

int main() {
    int num1 = 20;
    int num2 = 15;

    printf("Starting 3-stage pipeline simulation...\n");

    // Simulate the 3 stages of pipelining for one arithmetic operation
    fetch();  // Stage 1: Fetch
    decode(); // Stage 2: Decode
    execute(num1, num2); // Stage 3: Execute

    // For a single instruction, each stage takes 1 clock cycle
    int stages = 3; // Fetch, Decode, Execute
    int totalClockCycles = stages;

    printf("Total clock cycles needed to complete 1 arithmetic operation: %d\n", totalClockCycles);

    return 0;
}
