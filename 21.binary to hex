#include <stdio.h>
#include <string.h>
#include <math.h>

// Function to convert binary string to decimal integer
int binaryToDecimal(const char *binary) {
    int decimal = 0;
    int length = strlen(binary);

    for (int i = 0; i < length; i++) {
        if (binary[i] == '1') {
            decimal += pow(2, length - i - 1);
        } else if (binary[i] != '0') {
            printf("Invalid binary digit found: %c\n", binary[i]);
            return -1;  // Error code for invalid input
        }
    }
    return decimal;
}

// Function to convert decimal integer to hexadecimal string
void decimalToHexadecimal(int decimal, char *hex) {
    if (decimal == 0) {
        strcpy(hex, "0");
        return;
    }

    int index = 0;
    while (decimal > 0) {
        int remainder = decimal % 16;
        if (remainder < 10) {
            hex[index++] = remainder + '0';
        } else {
            hex[index++] = remainder - 10 + 'A';
        }
        decimal /= 16;
    }
    hex[index] = '\0';

    // Reverse the string to get the correct order
    for (int i = 0; i < index / 2; i++) {
        char temp = hex[i];
        hex[i] = hex[index - i - 1];
        hex[index - i - 1] = temp;
    }
}

int main() {
    char binary[65]; // Buffer to store the binary input (assuming up to 64 bits)
    char hex[17];    // Buffer to store the hexadecimal result

    printf("Enter a binary number: ");
    scanf("%64s", binary);  // Read binary input

    // Convert binary to decimal
    int decimal = binaryToDecimal(binary);
    if (decimal == -1) {
        return 1;  // Exit with error code
    }

    // Convert decimal to hexadecimal
    decimalToHexadecimal(decimal, hex);

    printf("Hexadecimal representation: %s\n", hex);

    return 0;
}
